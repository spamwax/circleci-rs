version: 2.1
# orbs:
#   github-release: h-matsuo/github-release@0.1.3

executors:
  my-executor:
    docker:
      - image: circleci/rust:stretch
    # working_directory: /home/circleci

jobs:
  build:
    # docker:
    #   - image: circleci/rust:stretch
    executor: my-executor
    environment:
      TARGET: x86_64-unknown-linux-gnu
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install Dependencies
          command: |
              sudo sh -c 'echo "deb http://deb.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/backports.list'
              sudo apt-get update
              sudo apt-get clean
              sudo rm -r /var/lib/apt/lists/*
              rustup component add clippy rustfmt
      - run:
          name: Build
          command: ci/script.sh

      - run:
          name: Copy Stuff
          command: |
            mkdir -p res_dir
            cp target/debug/circleci res_dir/
            cp /home/circleci/circleci_temp.txt res_dir/

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            # - circleci
            # - circleci_temp.txt

  mytest:
    # docker:
    #   - image: circleci/rust:stretch
    executor: my-executor
    environment:
      TARGET: x86_64-unknown-linux-gnu
    steps:
      # - checkout
      - attach_workspace:
          at: /home/circleci
      - run: ci/run_tests.sh
      - run: cargo run
      # - run:
      #     name: Show the Results
      #     command: |
      #         cargo run
      #         cat /home/circleci/circleci_temp.txt

  deploy:
    description: Create dummy file and publish a new release tagged `vX.Y.Z`.
    docker:
      - image: circleci/golang:1.13
    environment:
      TARGET: x86_64-unknown-linux-gnu
      CIRCLECI_TEST: true
    steps:
      - run:
          command: |
            mkdir artifacts
            echo dummy > ./artifacts/file
      - run:
          command: |
            go get github.com/tcnksm/ghr
            export VERSION=${CIRCLE_TAG}
            [ -n ${GITHUB_TOKEN} ] && echo "I have it!"
            [ -z ${GITHUB_TOKEN} ] && echo "I DO NOT have it!"
            echo ${CIRCLE_PROJECT_USERNAME} ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_SHA1} ${VERSION}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/file
          # command: grh --token $GITHUB_TOKEN --username $CIRCLE_PROJECT_USERNAME --repository $CIRCLE_PROJECT_REPONAME --commitish $CIRCLE_SHA1 -delete v0.0.17 ./artifacts/file
workflows:
  version: 2.1
  build-n-deploy:
      jobs:
        - build:
            filters:  # required since `deploy` has tag filters AND requires `build`
              tags:
                only: /.*/
        - mytest:
            requires:
              - build
            filters:
              tags:
                ignore: /.*/
        - deploy:
            requires:
              - build
            filters:
              tags:
                only: /^v.*/
              branches:
                ignore: /.*/
  # build-n-test:
  #     jobs:
  #       - build
  #       - mytest:
  #           requires:
  #             - build
